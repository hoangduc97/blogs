version: "3.4"

services:
    api:
        build: ./api
        container_name: api_blogs
        volumes:
            - ./api:/app/api
        environment:
            - DB_URI=${DB_URI}
            - PORT=${API_PORT}
            - REDIS_SECRET=${REDIS_SECRET}
            - REDIS_NAME=${REDIS_NAME}
            - REDIS_HOST=${REDIS_HOST}
            - REDIS_PORT=${REDIS_PORT}
        ports:
            - ${API_PORT}:${API_PORT}
        restart: unless-stopped
        depends_on: 
            - redis
            - db
        networks:
            - private_network

    client:
        build: ./client
        container_name: client_blogs
        volumes:
            - ./client:/app/client
        environment:
            - PORT=${CLIENT_PORT}
            - API_PORT=${API_PORT}
        ports:
            - ${CLIENT_PORT}:${CLIENT_PORT}
        restart: unless-stopped
        networks:
            - private_network

    db:
        image: mongo
        container_name: mongo_blogs
        volumes:
            - .docker/data/db:/data/db
        restart: unless-stopped
        ports:
            - ${DB_PORT}:${DB_PORT}
        networks:
            - private_network

    redis:
        image: redis:5-alpine
        hostname: redis
        command: redis-server --appendonly yes
        volumes:
            - .docker/data/redis:/var/lib/redis
        restart: unless-stopped
        ports:
            - ${REDIS_PORT}:${REDIS_PORT}
        networks:
            - private_network
networks:
    private_network:
        driver: bridge
